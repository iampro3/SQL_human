{
  "canvas": {
    "version": "2.2.11",
    "width": 2000,
    "height": 2000,
    "scrollTop": 0,
    "scrollLeft": 0,
    "zoomLevel": 1,
    "show": {
      "tableComment": true,
      "columnComment": true,
      "columnDataType": true,
      "columnDefault": true,
      "columnAutoIncrement": false,
      "columnPrimaryKey": true,
      "columnUnique": false,
      "columnNotNull": true,
      "relationship": true
    },
    "database": "MySQL",
    "databaseName": "",
    "canvasType": "@vuerd/builtin-generator-code",
    "language": "GraphQL",
    "tableCase": "pascalCase",
    "columnCase": "camelCase",
    "highlightTheme": "VS2015",
    "bracketType": "none",
    "setting": {
      "relationshipDataTypeSync": true,
      "relationshipOptimization": true,
      "columnOrder": [
        "columnName",
        "columnDataType",
        "columnNotNull",
        "columnUnique",
        "columnAutoIncrement",
        "columnDefault",
        "columnComment"
      ]
    },
    "pluginSerializationMap": {
      "@vuerd/plugin-generate-template": ""
    }
  },
  "table": {
    "tables": [],
    "indexes": []
  },
  "memo": {
    "memos": []
  },
  "relationship": {
    "relationships": []
  }
}